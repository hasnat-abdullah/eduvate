# Generated by Django 3.0.5 on 2020-08-19 04:50

import ckeditor_uploader.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('slug', models.SlugField(allow_unicode=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('short_description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('long_description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('featured_image', models.ImageField(blank=True, default='default', upload_to='image/courseImage')),
                ('featured_video', models.CharField(max_length=400)),
                ('requirement', models.CharField(max_length=500)),
                ('pre_requisite', models.CharField(max_length=500)),
                ('course_hours', models.CharField(max_length=20)),
                ('course_Lectures', models.IntegerField()),
                ('total_student_enrolled', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.IntegerField()),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('slug', models.SlugField(allow_unicode=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Category')),
            ],
        ),
        migrations.CreateModel(
            name='CourseLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(allow_unicode=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_position', models.SmallIntegerField()),
                ('name', models.CharField(max_length=250)),
                ('how_many_time_weekly_accessable', models.PositiveSmallIntegerField(default=1)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Course')),
            ],
        ),
        migrations.CreateModel(
            name='EnrolledCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolment_status', models.CharField(choices=[('completed', 'COMPLETED'), ('partial', 'PARTIAL'), ('ongoing', 'ONGOING'), ('notStarted', 'NOTSTARTED')], default='ongoing', max_length=10)),
                ('enrolled_on', models.DateField(auto_now_add=True)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', ckeditor_uploader.fields.RichTextUploadingField()),
                ('city', models.TextField(max_length=50)),
                ('image', models.ImageField(blank=True, default='default', upload_to='image/pro_pics')),
                ('fb_url', models.URLField()),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.Country')),
                ('name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(allow_unicode=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('short_description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('long_description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('slug', models.SlugField(allow_unicode=True)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.CourseLevel')),
            ],
        ),
        migrations.CreateModel(
            name='MeasuringScale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=500)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveSmallIntegerField()),
                ('gender', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('male', 'পুরুষ'), ('female', 'মহিলা'), ('other', 'অন্যান্য')], default='male', max_length=10)),
                ('address', models.CharField(max_length=200)),
                ('education', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('primary', 'প্রাথমিক'), ('secondary', 'মাধ্যমিক'), ('higher_secondary', 'উচ্চমাধ্যমিক'), ('graduation', 'স্নাতক'), ('post_graduation', 'স্নাতকোত্তর')], default='primary', max_length=60)),
                ('ocupation', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('student', 'ছাত্র/ছাত্রী'), ('job', 'চাকুরী'), ('business', 'ব্যবসা'), ('other', 'অন্যান্য')], default='student', max_length=30)),
                ('religion', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('islam', 'ইসলাম'), ('hindu', 'হিন্দু'), ('christian', 'খ্রিষ্টান'), ('bouddho', 'বৌদ্ধ'), ('other', 'অন্যান্য')], default='islam', max_length=30)),
                ('marial_status', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('unmarried', 'অবিবাহিত'), ('married', 'বিবাহিত'), ('divorced', 'তালাকপ্রাপ্ত'), ('widow', 'বিপত্নীক বা বিধবা'), ('other', 'অন্যান্য')], default='unmarried', max_length=30)),
                ('socio_economic_status', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('lower', 'নিম্নবিত্ত (৫,০০০ টাকার নিচে)'), ('lower_middle', 'নিম্ন-মধ্যবিত্ত (৫,০০১ থেকে ৩০,০০০ টাকা)'), ('middle', 'মধ্যবিত্ত (৩০,০০১ থেকে ৭০,০০০ টাকা)'), ('higher', 'উচ্চবিত্ত (৭০,০০১ টাকা বা তার উপরে)')], default='lower', max_length=80)),
                ('mental_problem', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('depression', 'বিষন্নতা'), ('stress', 'উদ্বেগজনিত সমস্যা'), ('suicide', 'আত্নহত্যার প্রবণতা'), ('schizophrenia', 'সিজোফ্রেনিয়া'), ('bipolar', 'বাইপোলার মুড ডিসর্ডার'), ('other', 'অন্যান্য')], default='depression', max_length=40, null=True)),
                ('mental_treatment_type', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('medicine', 'ওষুধ'), ('counseling', 'কাউন্সেলিং/ সাইকোথেরাপি')], default='medicine', max_length=50, null=True)),
                ('medicine_taken_duration', models.CharField(max_length=25, null=True)),
                ('physical_problem', models.CharField(max_length=70, null=True)),
                ('knowing_source', models.CharField(choices=[('', '-নির্বাচন করুন-'), ('friend', 'বন্ধু'), ('family', 'পরিবার'), ('fb', 'ফেসবুক'), ('counselor', 'মনোবিজ্ঞানী'), ('dr', 'ডাক্তার'), ('google', 'গুগল'), ('other', 'অন্যান্য')], default='friend', max_length=50, null=True)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentWorkHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=60)),
                ('designation', models.CharField(max_length=60)),
                ('start_date', models.DateField(default=datetime.datetime.now)),
                ('end_date', models.DateField(blank=True, default=None)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Student')),
            ],
        ),
        migrations.CreateModel(
            name='SlotList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_time', models.TimeField(default=None)),
                ('to_time', models.TimeField(default=None)),
                ('day', models.CharField(choices=[('saturday', 'SATURDAY'), ('sunday', 'SUNDAY'), ('monday', 'MONDAY'), ('tuesday', 'TUESDAY'), ('wednesday', 'WEDNESDAY'), ('thursday', 'THURSDAY'), ('Friday', 'FRIDAY')], default='saturday', max_length=9)),
                ('counselor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.Instructor')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_value', models.SmallIntegerField(default=0)),
                ('to_value', models.SmallIntegerField(default=0)),
                ('result', models.CharField(default='Minimal', max_length=40)),
                ('scale_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.MeasuringScale')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.SmallIntegerField(default=1)),
                ('question', models.CharField(max_length=800)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('scale_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.MeasuringScale')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('bkash', 'BKASH'), ('rocket', 'ROCKET')], default='bkash', max_length=6)),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('txn_id', models.CharField(max_length=20)),
                ('reference', models.CharField(max_length=100)),
                ('payment_status', models.CharField(choices=[('completed', 'COMPLETED'), ('partial', 'PARTIAL'), ('cancel', 'CANCEL'), ('hold', 'HOLD'), ('pending', 'pending'), ('incomplete', 'INCOMPLETE'), ('refund', 'REFUND')], default='incomplete', max_length=10)),
                ('paid_for_module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.CourseModule')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PathCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField()),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.Course')),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.LearningPath')),
            ],
        ),
        migrations.CreateModel(
            name='MeasuringScaleForModuleResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totalMarks', models.PositiveSmallIntegerField()),
                ('created_on', models.DateField(auto_now_add=True)),
                ('scale_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.MeasuringScale')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeasuringScaleForModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('module_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.CourseModule')),
                ('scale_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.MeasuringScale')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_position', models.SmallIntegerField()),
                ('title', models.CharField(max_length=250)),
                ('video', models.URLField(max_length=300)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('module_id', models.ManyToManyField(to='eduvateApp.CourseModule')),
            ],
        ),
        migrations.CreateModel(
            name='InstructorWorkHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=60)),
                ('designation', models.CharField(max_length=60)),
                ('start_date', models.DateField(default=datetime.datetime.now)),
                ('end_date', models.DateField(blank=True, default=None)),
                ('instructor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Instructor')),
            ],
        ),
        migrations.CreateModel(
            name='InstructorRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_count', models.PositiveSmallIntegerField(default=0)),
                ('rating_total_value', models.PositiveIntegerField(default=0)),
                ('instructor_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Instructor')),
            ],
        ),
        migrations.CreateModel(
            name='EnrolledModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_module_on', models.DateField(auto_now_add=True)),
                ('last_visited_on', models.DateField(auto_now=True)),
                ('enrolled_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.EnrolledCourse')),
                ('module_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.CourseModule')),
                ('payment_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.Payment')),
            ],
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Student'),
        ),
        migrations.CreateModel(
            name='CourseInstructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Course')),
                ('instructor_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.Instructor')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='course_lang',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.Language'),
        ),
        migrations.AddField(
            model_name='course',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.CourseLevel'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField(default=datetime.datetime.today)),
                ('note', models.CharField(max_length=150)),
                ('booked_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.Student')),
                ('slot_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eduvateApp.SlotList')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(max_length=30)),
                ('serial', models.SmallIntegerField(default=1)),
                ('value', models.SmallIntegerField(default=1)),
                ('scale_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduvateApp.MeasuringScale')),
            ],
        ),
    ]
